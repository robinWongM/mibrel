// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file proto/zyreva/v1/zyreva.proto (package zyreva.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message zyreva.v1.AnalyzeRequest
 */
export class AnalyzeRequest extends Message<AnalyzeRequest> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  constructor(data?: PartialMessage<AnalyzeRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zyreva.v1.AnalyzeRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnalyzeRequest {
    return new AnalyzeRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnalyzeRequest {
    return new AnalyzeRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnalyzeRequest {
    return new AnalyzeRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AnalyzeRequest | PlainMessage<AnalyzeRequest> | undefined, b: AnalyzeRequest | PlainMessage<AnalyzeRequest> | undefined): boolean {
    return proto3.util.equals(AnalyzeRequest, a, b);
  }
}

/**
 * @generated from message zyreva.v1.AnalyzeResponse
 */
export class AnalyzeResponse extends Message<AnalyzeResponse> {
  /**
   * @generated from field: bool finished = 1;
   */
  finished = false;

  /**
   * @generated from field: string log = 2;
   */
  log = "";

  /**
   * @generated from field: map<string, string> variables = 3;
   */
  variables: { [key: string]: string } = {};

  /**
   * @generated from field: repeated string nix_pkgs = 4;
   */
  nixPkgs: string[] = [];

  /**
   * @generated from field: repeated string install_cmds = 5;
   */
  installCmds: string[] = [];

  /**
   * @generated from field: repeated string build_cmds = 6;
   */
  buildCmds: string[] = [];

  /**
   * @generated from field: string start_cmd = 7;
   */
  startCmd = "";

  constructor(data?: PartialMessage<AnalyzeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "zyreva.v1.AnalyzeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "finished", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "log", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "variables", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
    { no: 4, name: "nix_pkgs", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 5, name: "install_cmds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 6, name: "build_cmds", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 7, name: "start_cmd", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AnalyzeResponse {
    return new AnalyzeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AnalyzeResponse {
    return new AnalyzeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AnalyzeResponse {
    return new AnalyzeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AnalyzeResponse | PlainMessage<AnalyzeResponse> | undefined, b: AnalyzeResponse | PlainMessage<AnalyzeResponse> | undefined): boolean {
    return proto3.util.equals(AnalyzeResponse, a, b);
  }
}

